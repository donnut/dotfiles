var _ = require('lodash');
var R = require('ramda');
var Benchmark = require('benchmark');

var suite = new Benchmark.Suite;

suite.add('manual', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var reduce = function(list) {
        var count = -1;
        var acc = 0;
        while (++count < list.length) {
            acc += list[count];
        }
    };
    reduce(list);
})
.add('basic reduce -- lodash', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var sum = _.reduce(list, function(acc, num) {
        return acc += num;
    }, 0);
})
.add('basic reduce -- ramda', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var sum = R.reduce(function(acc, num) {
        return acc += num;
    }, 0, list);
})
.add('curried reduce -- lodash', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var reduce = _.curry(_.reduce)(_, function(acc, num) {
        return acc += num;
    }, 0, {});
    reduce(list);
})
.add('curried reduce -- ramda', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var reduce = R.reduce(function(acc, num) {
        return acc += num;
    }, 0);
    reduce(list);
})
.add('curriedRight reduce -- lodash', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var reduce = _.curryRight(_.reduce)({}, 0, function(acc, num) {
        return acc += num;
    });
    reduce(list);
})
.add('curriedRight reduce -- ramda', function() {
    var list = [1,2,3,4,5,6,7,8,9];
    var reduce = R.flip(R.reduce)(R.__, 0, function(acc, num) {
        return acc += num;
    });
    reduce(list);
})
.on('cycle', function(event) {
    console.log(String(event.target));
})
.on('complete', function() {
    console.log('Fastest is ' + this.filter('fastest').pluck('name'));
})
.run({async: true});

