-- MySQL Script generated by MySQL Workbench
-- Fri Jan  8 14:58:34 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  `has_events` TINYINT(1) NOT NULL,
  `has_products` TINYINT(1) NOT NULL,
  `has_activity` TINYINT(1) NOT NULL,
  `has_child` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`subcategory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`subcategory` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_subcategory_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_subcategory_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `owner_name` VARCHAR(45) NOT NULL,
  `description` BLOB NOT NULL,
  `opening_description` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `website` VARCHAR(45) NULL,
  `twitter` VARCHAR(45) NULL,
  `facebook` BLOB NULL,
  `instagram` VARCHAR(45) NULL,
  `telegram` VARCHAR(45) NULL,
  `is_disabled` TINYINT(1) NOT NULL,
  `nation_id` VARCHAR(45) NOT NULL,
  `post_code` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `address_number` VARCHAR(45) NOT NULL,
  `address_string` VARCHAR(45) NOT NULL,
  `latitude` FLOAT(10,6) NOT NULL,
  `longitude` FLOAT(10,6) NOT NULL,
  `subcategory_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_food_point_subcategory1_idx` (`subcategory_id` ASC),
  CONSTRAINT `fk_food_point_subcategory1`
    FOREIGN KEY (`subcategory_id`)
    REFERENCES `mydb`.`subcategory` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`office`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`office` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `region` VARCHAR(45) NOT NULL,
  `manager` VARCHAR(45) NOT NULL,
  `allow_comment` TINYINT(1) NOT NULL,
  `allow_rating` TINYINT(1) NOT NULL,
  `allow_user_points` TINYINT(1) NOT NULL,
  `allow_moderator` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`source_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`source_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  `allow_global_moderation` TINYINT(1) NOT NULL,
  `allow_local_moderation` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `facebook_id` VARCHAR(45) NULL,
  `twitter_id` VARCHAR(45) NULL,
  `google_id` VARCHAR(45) NULL,
  `image_uri` BLOB NOT NULL,
  `is_disabled` TINYINT(1) NOT NULL,
  `office_id` INT NOT NULL,
  `user_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_office1_idx` (`office_id` ASC),
  INDEX `fk_user_user_type1_idx` (`user_type_id` ASC),
  CONSTRAINT `fk_user_office1`
    FOREIGN KEY (`office_id`)
    REFERENCES `mydb`.`office` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_user_type1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `mydb`.`user_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`survey_meta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`survey_meta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `datetime` DATETIME NOT NULL,
  `is_update` TINYINT(1) NOT NULL,
  `food_point_id` INT NOT NULL,
  `office_id` INT NOT NULL,
  `source_category_id` INT NOT NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`id`, `food_point_id`),
  INDEX `fk_survey_meta_food_point1_idx` (`food_point_id` ASC),
  INDEX `fk_survey_meta_office1_idx` (`office_id` ASC),
  INDEX `fk_survey_meta_source_category1_idx` (`source_category_id` ASC),
  INDEX `fk_survey_meta_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_survey_meta_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_survey_meta_office1`
    FOREIGN KEY (`office_id`)
    REFERENCES `mydb`.`office` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_survey_meta_source_category1`
    FOREIGN KEY (`source_category_id`)
    REFERENCES `mydb`.`source_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_survey_meta_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` BLOB NOT NULL,
  `datetime` DATETIME NOT NULL,
  `is_disabled` TINYINT(1) NOT NULL,
  `user_id` INT NOT NULL,
  `food_point_id` INT NOT NULL,
  `comment_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  INDEX `fk_comment_food_point1_idx` (`food_point_id` ASC),
  INDEX `fk_comment_comment1_idx` (`comment_id` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `mydb`.`comment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point_change`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point_change` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `datetime` DATETIME NOT NULL,
  `field` VARCHAR(70) NOT NULL,
  `old_value` BLOB NOT NULL,
  `food_point_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_food_point_change_food_point1_idx` (`food_point_id` ASC),
  INDEX `fk_food_point_change_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_food_point_change_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_food_point_change_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`rating` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `is_up` TINYINT(1) NOT NULL,
  `datetime` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  `food_point_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_rating_user1_idx` (`user_id` ASC),
  INDEX `fk_rating_food_point1_idx` (`food_point_id` ASC),
  CONSTRAINT `fk_rating_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rating_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` BLOB NOT NULL,
  `datetime` DATETIME NOT NULL,
  `is_disabled` TINYINT(1) NOT NULL,
  `food_point_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `opening_timestamp` DATETIME NULL,
  `closing_timestamp` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_event_food_point1_idx` (`food_point_id` ASC),
  INDEX `fk_event_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_event_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point_activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point_has_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point_has_product` (
  `food_point_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`food_point_id`, `product_id`),
  INDEX `fk_food_point_has_product_product1_idx` (`product_id` ASC),
  INDEX `fk_food_point_has_product_food_point1_idx` (`food_point_id` ASC),
  CONSTRAINT `fk_food_point_has_product_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_food_point_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`opening`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`opening` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `weekday` INT NOT NULL,
  `opening_time` TIME NOT NULL,
  `closing_time` TIME NOT NULL,
  `pause_start` TIME NULL,
  `pause_end` TIME NULL,
  `season_start` INT NOT NULL DEFAULT 1,
  `season_end` INT NOT NULL DEFAULT 12,
  `food_point_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_opening_food_point1_idx` (`food_point_id` ASC),
  CONSTRAINT `fk_opening_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point_has_food_point_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point_has_food_point_activity` (
  `food_point_id` INT NOT NULL,
  `food_point_activity_id` INT NOT NULL,
  PRIMARY KEY (`food_point_id`, `food_point_activity_id`),
  INDEX `fk_food_point_has_food_point_activity_food_point_activity1_idx` (`food_point_activity_id` ASC),
  INDEX `fk_food_point_has_food_point_activity_food_point1_idx` (`food_point_id` ASC),
  CONSTRAINT `fk_food_point_has_food_point_activity_food_point1`
    FOREIGN KEY (`food_point_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_food_point_has_food_point_activity_food_point_activity1`
    FOREIGN KEY (`food_point_activity_id`)
    REFERENCES `mydb`.`food_point_activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`food_point_has_food_point`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`food_point_has_food_point` (
  `food_point_parent_id` INT NOT NULL,
  `food_point_child_id` INT NOT NULL,
  PRIMARY KEY (`food_point_parent_id`, `food_point_child_id`),
  INDEX `fk_food_point_has_food_point_food_point2_idx` (`food_point_child_id` ASC),
  INDEX `fk_food_point_has_food_point_food_point1_idx` (`food_point_parent_id` ASC),
  CONSTRAINT `fk_food_point_has_food_point_food_point1`
    FOREIGN KEY (`food_point_parent_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_food_point_has_food_point_food_point2`
    FOREIGN KEY (`food_point_child_id`)
    REFERENCES `mydb`.`food_point` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
